-- =====================================================
-- CHUCK WAGON ALLERG√àNES - AJOUT VISIBILIT√â MENU
-- Date: 27 janvier 2025
-- Version: 2.1.0 - Ajout option "Actuellement √† la carte"
-- =====================================================

/*
  # Ajout de la fonctionnalit√© "Actuellement √† la carte"

  1. Nouvelle colonne
    - `a_la_carte` (boolean, default true) dans la table dishes
    - Permet de masquer/afficher des plats dans le menu public

  2. Fonctionnalit√©s
    - Case √† cocher dans l'interface d'administration
    - Filtrage automatique dans le menu public
    - Historique des modifications de visibilit√©

  3. Migration
    - Tous les plats existants seront visibles par d√©faut
    - Pas d'impact sur les donn√©es existantes
*/

-- =====================================================
-- 1. AJOUTER LA COLONNE A_LA_CARTE
-- =====================================================

-- Ajouter la colonne a_la_carte si elle n'existe pas
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_name = 'dishes' AND column_name = 'a_la_carte'
  ) THEN
    ALTER TABLE dishes ADD COLUMN a_la_carte boolean DEFAULT true;
    RAISE NOTICE '‚úÖ Colonne a_la_carte ajout√©e avec succ√®s';
  ELSE
    RAISE NOTICE '‚ÑπÔ∏è Colonne a_la_carte existe d√©j√†';
  END IF;
END $$;

-- =====================================================
-- 2. METTRE √Ä JOUR LES PLATS EXISTANTS
-- =====================================================

-- S'assurer que tous les plats existants sont visibles par d√©faut
UPDATE dishes 
SET a_la_carte = true 
WHERE a_la_carte IS NULL;

-- =====================================================
-- 3. AJOUTER UN INDEX POUR LA PERFORMANCE
-- =====================================================

-- Index sur a_la_carte pour optimiser les requ√™tes de filtrage
CREATE INDEX IF NOT EXISTS idx_dishes_a_la_carte 
ON dishes(a_la_carte);

-- Index compos√© pour les requ√™tes fr√©quentes (langue + visibilit√©)
CREATE INDEX IF NOT EXISTS idx_dishes_langue_a_la_carte 
ON dishes(langue, a_la_carte);

-- =====================================================
-- 4. FONCTION POUR BASCULER LA VISIBILIT√â
-- =====================================================

-- Fonction utilitaire pour basculer la visibilit√© d'un plat
CREATE OR REPLACE FUNCTION toggle_dish_visibility(dish_id_param uuid)
RETURNS boolean AS $$
DECLARE
    current_visibility boolean;
    dish_name_val text;
BEGIN
    -- R√©cup√©rer l'√©tat actuel
    SELECT a_la_carte, nom INTO current_visibility, dish_name_val
    FROM dishes 
    WHERE id = dish_id_param;
    
    IF NOT FOUND THEN
        RAISE EXCEPTION 'Plat avec ID % non trouv√©', dish_id_param;
    END IF;
    
    -- Basculer la visibilit√©
    UPDATE dishes 
    SET a_la_carte = NOT current_visibility
    WHERE id = dish_id_param;
    
    RAISE NOTICE 'Visibilit√© du plat "%" bascul√©e: % ‚Üí %', 
                 dish_name_val, current_visibility, NOT current_visibility;
    
    RETURN NOT current_visibility;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- =====================================================
-- 5. FONCTION POUR MASQUER/AFFICHER EN MASSE
-- =====================================================

-- Fonction pour masquer tous les plats d'une cat√©gorie
CREATE OR REPLACE FUNCTION hide_category_dishes(category_name text)
RETURNS integer AS $$
DECLARE
    affected_count integer;
BEGIN
    UPDATE dishes 
    SET a_la_carte = false 
    WHERE categorie = category_name AND a_la_carte = true;
    
    GET DIAGNOSTICS affected_count = ROW_COUNT;
    
    RAISE NOTICE '% plats de la cat√©gorie "%" masqu√©s du menu', affected_count, category_name;
    
    RETURN affected_count;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Fonction pour afficher tous les plats d'une cat√©gorie
CREATE OR REPLACE FUNCTION show_category_dishes(category_name text)
RETURNS integer AS $$
DECLARE
    affected_count integer;
BEGIN
    UPDATE dishes 
    SET a_la_carte = true 
    WHERE categorie = category_name AND a_la_carte = false;
    
    GET DIAGNOSTICS affected_count = ROW_COUNT;
    
    RAISE NOTICE '% plats de la cat√©gorie "%" ajout√©s au menu', affected_count, category_name;
    
    RETURN affected_count;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- =====================================================
-- 6. FONCTION DE STATISTIQUES
-- =====================================================

-- Fonction pour obtenir les statistiques de visibilit√©
CREATE OR REPLACE FUNCTION get_menu_visibility_stats()
RETURNS TABLE(
    categorie text,
    total_plats integer,
    plats_visibles integer,
    plats_masques integer,
    pourcentage_visible numeric
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        d.categorie,
        COUNT(*)::integer as total_plats,
        COUNT(*) FILTER (WHERE d.a_la_carte = true)::integer as plats_visibles,
        COUNT(*) FILTER (WHERE d.a_la_carte = false)::integer as plats_masques,
        ROUND(
            (COUNT(*) FILTER (WHERE d.a_la_carte = true)::numeric / COUNT(*)::numeric) * 100, 
            1
        ) as pourcentage_visible
    FROM dishes d
    GROUP BY d.categorie
    ORDER BY d.categorie;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- =====================================================
-- 7. TEST DE LA NOUVELLE FONCTIONNALIT√â
-- =====================================================

-- Fonction de test pour v√©rifier la visibilit√©
CREATE OR REPLACE FUNCTION test_menu_visibility()
RETURNS text AS $$
DECLARE
    test_dish_id uuid;
    visibility_before boolean;
    visibility_after boolean;
    result_text text := '';
BEGIN
    result_text := 'üß™ TEST DE LA VISIBILIT√â MENU' || E'\n';
    result_text := result_text || '=============================' || E'\n';
    
    -- Cr√©er un plat de test
    INSERT INTO dishes (nom, categorie, langue, ingredients, allergenes, a_la_carte)
    VALUES ('Test Visibilit√©', 'plats', 'fr', ARRAY['test']::text[], ARRAY[]::text[], true)
    RETURNING id INTO test_dish_id;
    
    result_text := result_text || '‚úÖ Plat de test cr√©√© (visible par d√©faut)' || E'\n';
    
    -- Tester le basculement de visibilit√©
    SELECT a_la_carte INTO visibility_before FROM dishes WHERE id = test_dish_id;
    PERFORM toggle_dish_visibility(test_dish_id);
    SELECT a_la_carte INTO visibility_after FROM dishes WHERE id = test_dish_id;
    
    result_text := result_text || '‚úÖ Visibilit√© bascul√©e: ' || visibility_before || ' ‚Üí ' || visibility_after || E'\n';
    
    -- Nettoyer le test
    DELETE FROM dishes WHERE id = test_dish_id;
    result_text := result_text || '‚úÖ Test nettoy√©' || E'\n';
    
    result_text := result_text || '=============================' || E'\n';
    
    RETURN result_text;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Ex√©cuter le test
SELECT test_menu_visibility();

-- =====================================================
-- 8. MESSAGES DE SUCC√àS
-- =====================================================

DO $$
DECLARE
    total_dishes integer;
    visible_dishes integer;
    hidden_dishes integer;
BEGIN
    -- Compter les plats
    SELECT COUNT(*) INTO total_dishes FROM dishes;
    SELECT COUNT(*) INTO visible_dishes FROM dishes WHERE a_la_carte = true;
    SELECT COUNT(*) INTO hidden_dishes FROM dishes WHERE a_la_carte = false;
    
    -- Messages de succ√®s
    RAISE NOTICE '';
    RAISE NOTICE 'üéâ FONCTIONNALIT√â "ACTUELLEMENT √Ä LA CARTE" AJOUT√âE !';
    RAISE NOTICE '================================================';
    RAISE NOTICE '';
    RAISE NOTICE 'üìä √âTAT ACTUEL :';
    RAISE NOTICE '   ‚úÖ Total plats : % plats', total_dishes;
    RAISE NOTICE '   ‚úÖ Plats visibles : % plats', visible_dishes;
    RAISE NOTICE '   ‚úÖ Plats masqu√©s : % plats', hidden_dishes;
    RAISE NOTICE '   ‚úÖ Colonne a_la_carte ajout√©e avec succ√®s';
    RAISE NOTICE '   ‚úÖ Index de performance cr√©√©s';
    RAISE NOTICE '';
    RAISE NOTICE 'üîß NOUVELLES FONCTIONNALIT√âS :';
    RAISE NOTICE '   ‚Ä¢ Case √† cocher dans l''interface admin';
    RAISE NOTICE '   ‚Ä¢ Filtrage automatique dans le menu public';
    RAISE NOTICE '   ‚Ä¢ Fonctions utilitaires (toggle, hide/show par cat√©gorie)';
    RAISE NOTICE '   ‚Ä¢ Statistiques de visibilit√© par cat√©gorie';
    RAISE NOTICE '';
    RAISE NOTICE 'üìù UTILISATION :';
    RAISE NOTICE '   1. Aller dans l''administration';
    RAISE NOTICE '   2. Cocher/d√©cocher "Actuellement √† la carte"';
    RAISE NOTICE '   3. Les plats d√©coch√©s disparaissent du menu public';
    RAISE NOTICE '   4. Utiliser les statistiques pour suivre la visibilit√©';
    RAISE NOTICE '';
    RAISE NOTICE 'üöÄ FONCTIONNALIT√â PR√äTE √Ä UTILISER !';
END $$;

-- =====================================================
-- FIN DE LA MIGRATION
-- =====================================================